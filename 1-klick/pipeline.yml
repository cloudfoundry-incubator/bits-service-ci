jobs:
# - name: create-docker-image
#   serial: true
#   plan:
#   - get: bits-service-release
#     trigger: true
#   - get: ci-resources
#   - task: create images
#     privileged: true
#     params:
#       DOCKER_HUB_USER: ((dockerhub_user))
#       DOCKER_HUB_PASSWORD: ((dockerhub_password))
#       TAG: ((cluster-name))
#     file: ci-resources/tasks/create-docker-images/task.yml

# - name: Sync eirini-release fork (develop)
#   plan:
#     - aggregate:
#       - get: eirini-release-fork
#       - get: eirini-release
#         trigger: true
#       - get: ci-tasks
#         resource: bits-service-ci
#     - task: sync
#       file: ci-tasks/tasks/sync-repo.yml
#       input_mapping:
#         fork-repo: eirini-release
#         upstream-repo: eirini-release
#       params: { BRANCH: develop }
#     - put: eirini-release-fork
#       params: { repository: synced-repo, force: true }

- name: create-cluster
  serial_groups: [ ((cluster-name)) ]
  serial: true
  plan:
    - get: ci-resources
    - get: ((cluster-name))-event-created
      params:
        bump: major
    - task: create-kubernetes-cluster
      file: ci-resources/tasks/create-cluster/task.yml
      params:
        IBMCLOUD_ACCOUNT: ((ibmcloud-account))
        IBMCLOUD_USER: ((ibmcloud-user))
        IBMCLOUD_PASSWORD: ((ibmcloud-password))
        CLUSTER_NAME: ((cluster-name))
    - put: ((cluster-name))-event-created
      params:
        file: ((cluster-name))-event-created/number

- name: prepare-cluster
  serial_groups: [ ((cluster-name)) ]
  serial: true
  plan:
  - aggregate:
    - get: ci-resources
    - get: ((cluster-name))-event-created
      trigger: true
      passed: [create-cluster]
    - get: cluster-state
  - task: create-cluster-config
    params:
        IBMCLOUD_ACCOUNT: ((ibmcloud-account))
        IBMCLOUD_USER: ((ibmcloud-user))
        IBMCLOUD_PASSWORD: ((ibmcloud-password))
        CLUSTER_NAME: ((cluster-name))
        CLUSTER_ADMIN_PASSWORD: ((cluster_admin_password))
        UAA_ADMIN_CLIENT_SECRET: ((uaa_admin_client_secret))
        NATS_PASSWORD: ((nats_password))
    file: ci-resources/tasks/cluster-config/task.yml
  - aggregate:
    - put: cluster-state
      params: {repository: state-modified}
    - task: provision-hostpath-provider
      params:
          IBMCLOUD_ACCOUNT: ((ibmcloud-account))
          IBMCLOUD_USER: ((ibmcloud-user))
          IBMCLOUD_PASSWORD: ((ibmcloud-password))
          CLUSTER_NAME: ((cluster-name))
      file: ci-resources/tasks/hostpath-provisioner/task.yml

- name: check-cluster-readiness
  serial_groups: [ ((cluster-name)) ]
  serial: true
  plan:
    - aggregate:
      - get: ci-resources
      - get: ((cluster-name))-event-created
        trigger: true
        passed: [prepare-cluster]
      - get: ((cluster-name))-event-ready
        params:
          bump: major
    - task: deploy-smoke-test-app
      file: ci-resources/tasks/deploy-app/task.yml
      params:
        IBMCLOUD_ACCOUNT: ((ibmcloud-account))
        IBMCLOUD_USER: ((ibmcloud-user))
        IBMCLOUD_PASSWORD: ((ibmcloud-password))
        CLUSTER_NAME: ((cluster-name))
    - task: check-app-is-up
      attempts: 50
      file: ci-resources/tasks/curl-app/task.yml
    - put: ((cluster-name))-event-ready
      params:
        file: ((cluster-name))-event-ready/number

- name: delete-cluster
  serial_groups: [ ((cluster-name)) ]
  serial: true
  plan:
    - get: ci-resources
    - task: Delete Kubernetes Cluster
      file: ci-resources/tasks/delete-cluster/task.yml
      params:
        IBMCLOUD_ACCOUNT: ((ibmcloud-account))
        IBMCLOUD_USER: ((ibmcloud-user))
        IBMCLOUD_PASSWORD: ((ibmcloud-password))
        CLUSTER_NAME: ((cluster-name))

# ----------------------------------

- name: deploy-scf-uaa
  serial_groups: [ ((cluster-name)) ]
  serial: true
  plan:
  - aggregate:
    - get: scf-uaa-resources
      trigger: true
      # passed:
      # - create-docker-images
    - get: ((cluster-name))-event-ready
      trigger: true
      passed: [ check-cluster-readiness ]
    - { get: bits-ci-resources, resource: bits-service-ci }
    - get: eirini-release
    - get: ci-resources
    - { get: state, resource: cluster-state }
    - get: ((cluster-name))-event-uaa-ready
      trigger: true
      params:
        bump: major
  - task: deploy-uaa
    file: bits-ci-resources/1-klick/tasks/helm-install/task.yml
    params:
      IBMCLOUD_ACCOUNT: ((ibmcloud-account))
      IBMCLOUD_USER: ((ibmcloud-user))
      IBMCLOUD_PASSWORD: ((ibmcloud-password))
      COMPONENT: uaa
      HELM_CHART: uaa
      CLUSTER_NAME: ((cluster-name))
  - task: waiting-for-uaa
    attempts: 100
    params:
      IBMCLOUD_ACCOUNT: ((ibmcloud-account))
      IBMCLOUD_USER: ((ibmcloud-user))
      IBMCLOUD_PASSWORD: ((ibmcloud-password))
      CLUSTER_NAME: ((cluster-name))
    file: ci-resources/tasks/waiting-for-uaa/task.yml
  - put: ((cluster-name))-event-uaa-ready
    params:
      file: ((cluster-name))-event-uaa-ready/number

- name: deploy-scf-eirini
  serial_groups: [ ((cluster-name)) ]
  serial: true
  plan:
  - aggregate:
    - get: scf-resources
      trigger: true
      # passed:
      # - create-docker-images
    - get: scf-uaa-resources
    - get: ci-resources
    - { get: bits-ci-resources, resource: bits-service-ci }
    - { get: state, resource: cluster-state }
    - get: eirini-release
      trigger: true
    - get: ((cluster-name))-event-uaa-ready
      trigger: true
      passed: [deploy-scf-uaa]
  - task: deploy-scf
    file: bits-ci-resources/1-klick/tasks/helm-install/task.yml
    params:
      IBMCLOUD_ACCOUNT: ((ibmcloud-account))
      IBMCLOUD_USER: ((ibmcloud-user))
      IBMCLOUD_PASSWORD: ((ibmcloud-password))
      COMPONENT: scf
      HELM_CHART: cf
      CLUSTER_NAME: ((cluster-name))
  - task: smoke-eirini
    attempts: 100
    params:
      CLUSTER_NAME: ((cluster-name))
      IBMCLOUD_ACCOUNT: ((ibmcloud-account))
      IBMCLOUD_USER: ((ibmcloud-user))
      IBMCLOUD_PASSWORD: ((ibmcloud-password))
    file: ci-resources/tasks/eirini-smoke-tests/task.yml

- name: run-smoke-tests
  serial_groups: [ ((cluster-name)) ]
  plan:
  - aggregate:
    - get: eirini-release
      passed: [ deploy-scf-eirini ]
      trigger: true
    - get: cf-smoke-tests
    - { get: state, resource: cluster-state }
    - get: ci-resources
    - get: ((cluster-name))-event-uaa-ready
      trigger: true
  - task: run smoke tests
    params:
      CLUSTER_NAME: ((cluster-name))
      IBMCLOUD_ACCOUNT: ((ibmcloud-account))
      IBMCLOUD_USER: ((ibmcloud-user))
      IBMCLOUD_PASSWORD: ((ibmcloud-password))
    file: ci-resources/tasks/run-smoke-tests/task.yml

resources:
- name: ci-resources
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/eirini-ci.git
    branch: master

# - name: eirini-release-fork
#   type: git
#   source:
#     uri: git@github.com:petergtz/eirini-release.git
#     branch: ((eirini-release-branch))
#     private_key: ((github-private-key))

- name: eirini-release
  type: git
  source:
    uri: https://github.com/idev4u/eirini-release.git
    branch: ((eirini-release-branch))

- name: scf-uaa-resources
  type: git
  source:
    uri: https://github.com/idev4u/eirini-release.git
    branch: ((eirini-release-branch))
    paths:
    - helm/uaa

- name: scf-resources
  type: git
  source:
    uri: https://github.com/idev4u/eirini-release.git
    branch: ((eirini-release-branch))
    paths:
    - helm/cf

- name: ((cluster-name))-event-uaa-ready
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/bits-service-private-config.git
    branch: events
    file: ((cluster-name))-event-ready
    private_key: ((github-private-key))

- name: cf-smoke-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-smoke-tests.git
    branch: master

- name: cluster-state
  type: git
  source:
    uri: git@github.com:cloudfoundry/bits-service-private-config.git
    branch: master
    private_key: ((github-private-key))

- name: ((cluster-name))-event-created
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/bits-service-private-config.git
    branch: events
    file: ((cluster-name))-event-created
    private_key: ((github-private-key))

- name: ((cluster-name))-event-ready
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/bits-service-private-config.git
    branch: events
    file: ((cluster-name))-event-ready
    private_key: ((github-private-key))

# - name: oratos
#   type: git
#   source:
#     uri: https://github.com/gdankov/oratos-deployment
#     branch: eirini

- name: bits-service-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: master
    private_key: ((github-private-key))
    paths: ["manifests/*", "scripts/*", "tasks/*", "operations/*", "bitsgo/*", "templates/*", "1-klick"]

