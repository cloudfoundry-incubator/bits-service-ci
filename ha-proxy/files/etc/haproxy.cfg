# This file is managed by the Concourse pipeline defined at
# https://github.com/cloudfoundry-incubator/bits-service-ci/blob/master/ha-proxy/pipeline.yml

global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
  tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend www-http
   bind *:80
   reqadd X-Forwarded-Proto:\ http
   redirect scheme https code 301 if !{ ssl_fc }

frontend www-https
   bind *:443 ssl crt /etc/ssl/private/ci.flintstone.cf.cloud.ibm.com.pem crt /etc/ssl/private/postgres_ci_cf-app_com.pem
   reqadd X-Forwarded-Proto:\ https
   default_backend concourse1

   acl letsencrypt-acl path_beg /.well-known/acme-challenge/
   use_backend letsencrypt-backend if letsencrypt-acl

   ## define inbound URLs
   acl host_concourse1         hdr(host) -i ci.flintstone.cf.cloud.ibm.com
   acl host_concourse-pgci     hdr(host) -i postgres.ci.cf-app.com

   ## select the backends to route to
   use_backend concourse1         if host_concourse1
   use_backend concourse-pgci     if host_concourse-pgci

backend concourse1
   server cc1-1 10.175.143.157:8080 check
   server cc1-2 10.175.110.164:8080 check

backend concourse-pgci
   server cc-pgci-1 161.202.37.10:8080 check
#   server cc-pgci-1 161.202.52.68:8080 check
#   server cc-pgci-1 10.110.192.72:8080 check

backend letsencrypt-backend
   server letsencrypt 127.0.0.1:54321
