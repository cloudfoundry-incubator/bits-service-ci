resources:
- name: bits-service-release-bitsgo
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-release.git
    branch: master
    private_key: ((github-private-key))

- name: bits-service-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: master
    private_key: ((github-private-key))
    paths: ["scripts/*", "tasks/*"]

- name: cf-deployment-bitsgo
  type: git
  source:
    uri: https://github.com/petergtz/cf-deployment.git
    branch: develop

- name: bits-service-release-bitsgo-tarball
  type: s3
  source:
    access_key_id: ((s3-blobstore-access-key-id))
    secret_access_key: ((s3-blobstore-secret-access-key))
    bucket: ci-bits-service-artifacts
    region_name: eu-west-1
    private: false
    regexp: bits-service-release-bitsgo/bits-service-(.*).tgz

jobs:
- name: deploy-cf-in-((bosh_lite_name))
  serial: true
  serial_groups: [ bosh-lite ]
  plan:
  - aggregate:
    - { get: 1-click }
    - { get: ((bosh_lite_name))-cf-deployment-events, trigger: true }
    - { get: ((bosh_lite_name))-ready-for-deployment-events, trigger: true, passed: [ update-cloud-and-runtime-config-((bosh_lite_name)) ] }
    - { get: state }
    - { get: cf-deployment, resource: cf-deployment-bitsgo}
    - { get: bits-service-release-bitsgo-tarball, trigger: true }
  - task: detect-stemcell
    file: 1-click/tasks/detect-stemcell.yml
  - task: bosh upload-release bits-service
    file: 1-click/tasks/bosh-upload-release.yml
    input_mapping:
      releases: bits-service-release-bitsgo-tarball
    params:
      BOSH_LITE_NAME: ((bosh_lite_name))
      RELEASE_TARBALL: '*.tgz'
  - task: Generate cf deployment manifest
    file: 1-click/tasks/generate-cf-deployment-manifest.yml
    params:
      BOSH_LITE_NAME: ((bosh_lite_name))
      EXTRA_ARGS: |
        -o cf-deployment/operations/experimental/bits-service.yml
        -o cf-deployment/operations/experimental/enable-bits-service-consul.yml
        -o cf-deployment/operations/experimental/bits-service-webdav.yml
  - put: state
    params: { repository: out-state, rebase: true }
  - task: Deploy cf
    file: 1-click/tasks/bosh-deploy.yml
    params: { BOSH_LITE_NAME: ((bosh_lite_name)) }

- name:  Run CC Updater tests
  serial: true
  serial_groups: [ bosh-lite ]
  plan:
  - aggregate:
    - { get: 1-click }
    - { get: ((bosh_lite_name))-cf-deployment-events, passed: [ deploy-cf-in-((bosh_lite_name)) ], trigger: true }
    - { get: ((bosh_lite_name))-ready-for-deployment-events, trigger: true, passed: [ deploy-cf-in-((bosh_lite_name)) ] }
    - { get: state }
    - { get: bits-service-release-bitsgo-tarball, passed: [deploy-cf-in-((bosh_lite_name))], trigger: true }
    - { get: bits-service-release-bitsgo, trigger: true }
    - { get: bits-service-ci, trigger: true }
  - task: Run CC Updater tests
    file: bits-service-ci/tasks/run-cc-updater-tests.yml
    input_mapping:
      ci: bits-service-ci
      vars-store: state
      bits-service-release: bits-service-release-bitsgo
    params: { ENVIRONMENT_NAME: ((bosh_lite_name)) }
