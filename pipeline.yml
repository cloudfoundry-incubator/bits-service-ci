groups:
- name: all
  jobs:
  - run-unit-and-integration-tests
  - run-bits-service-client-tests
  - create-and-upload-release
  - deploy-with-S3
  - deploy-with-LOCAL
  - deploy-with-WEBDAV
  - run-system-tests-S3
  - run-system-tests-LOCAL
  - run-system-tests-WEBDAV
  - create-cf-release
  - deploy-and-test-cf-dea-aws
  - deploy-and-test-cf-diego-aws
  - enable-BITS-SERVICE-diego-and-run-CATs
  - enable-BITS-SERVICE-and-run-CATs
  - migration-bosh1 (S3)
  - migration-backwards-bosh1
  - migration-backwards-bosh2
  - migration-bosh2 (webdav)
  - bump-bits-service-release
- name: bits-service
  jobs:
  - run-unit-and-integration-tests
  - run-bits-service-client-tests
- name: bits-service-release
  jobs:
  - create-and-upload-release
  - deploy-with-S3
  - deploy-with-LOCAL
  - deploy-with-WEBDAV
  - run-system-tests-S3
  - run-system-tests-LOCAL
  - run-system-tests-WEBDAV
  - upload-bits-service-release-and-manifest-to-acceptance
- name: cf-release
  jobs:
  - create-cf-release
  - deploy-and-test-cf-dea-aws
  - enable-BITS-SERVICE-and-run-CATs
  - deploy-and-test-cf-diego-aws
  - enable-BITS-SERVICE-diego-and-run-CATs
  - cf-release-done
- name: migration
  jobs:
  - migration-backwards-bosh1
  - migration-bosh1 (S3)
  - migration-backwards-bosh2
  - migration-bosh2 (webdav)
- name: acceptance
  jobs:
    - upload-bits-service-release-and-manifest-to-acceptance
    - cf-release-done
- name: infrastructure
  jobs:
  - recreate-bosh-lite-1
  - recreate-bosh-lite-acceptance
  - cleanup-bosh-1
  - cleanup-bosh-acceptance
  - manually-delete-cf-dea-aws
  - manually-delete-cf-diego-aws
  - manually-delete-cf-bosh1
  - manually-delete-cf-bosh2

resources:
- name: aws-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent }

- name: boshlite-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-warden-boshlite-ubuntu-trusty-go_agent }

- name: bits-service-release-tarball
  type: s3
  source: &s3-resource
    access_key_id: {{s3-blobstore-access-key-id}}
    secret_access_key: {{s3-blobstore-secret-access-key}}
    bucket: ci-bits-service-artifacts
    region_name: eu-west-1
    regexp: bits-service-release/bits-service-(.*).tgz
    private: false

- name: s3-bits-service-manifest
  type: s3
  source:
    <<: *s3-resource
    regexp: bits-service-manifest/manifest-(.*).yml

- name: diego-release-tarball
  type: bosh-io-release
  source: { repository: cloudfoundry/diego-release }

- name: cf-release-tarball
  type: s3
  source:
    <<: *s3-resource
    regexp: cf-release/cf-(.*).tgz

- name: s3-cf-manifest
  type: s3
  source:
    <<: *s3-resource
    regexp: cf-manifest/manifest-(.*).yml

- name: s3-cf-aws-manifest
  type: s3
  source:
    <<: *s3-resource
    regexp: cf-aws-manifest/manifest-(.*).yml

- name: git-bits-service-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["manifests/*", "scripts/*", "tasks/*"]

- name: ci-tasks
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["scripts/*", "tasks/*"]

- name: ci-deployment-manifest-templates
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["manifests/*"]

- name: git-capi-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/capi-release.git
    branch: bits-service
    private_key: {{github-private-key}}

- name: bits-service
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service.git
    branch: master

- name: git-bits-service-client
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service-client.git
    branch: master

- name: git-bits-service-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-release.git
    branch: master
    private_key: {{github-private-key}}

- name: bits-service-deployment-manifest-generation-tools
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-release.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["templates/*", "scripts/*"]

- name: bits-service-system-test-source
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-release.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["spec/*"]

- name: git-cf-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-release.git
    branch: master

- name: nightly-timer
  type: time
  source:
    interval: 24h

- name: aws-dea-deployment
  type: bosh-deployment
  source: &cf1-deployment-source
    target: {{aws-bosh-target}}
    username: {{aws-bosh-username}}
    password: {{aws-bosh-password}}
    deployment: cf1

- name: aws-diego-deployment
  type: bosh-deployment
  source:
    <<: *cf1-deployment-source
    deployment: cf2

- name: boshlite1-deployment
  type: bosh-deployment
  source: &boshlite1-source
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: cf-warden

- name: boshlite1-s3-deployment
  type: bosh-deployment
  source:
    <<: *boshlite1-source
    deployment: bits-service-s3

- name: boshlite1-webdav-deployment
  type: bosh-deployment
  source:
    <<: *boshlite1-source
    deployment: bits-service-webdav

- name: boshlite1-local-deployment
  type: bosh-deployment
  source:
    <<: *boshlite1-source
    deployment: bits-service-local

- name: boshlite2-deployment
  type: bosh-deployment
  source:
    target: {{bosh2-target}}
    username: {{bosh2-username}}
    password: {{bosh2-password}}
    deployment: cf-warden

- name: cf-release-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: metadata
    file: version/cf-release/version
    private_key: {{github-private-key}}
    initial_version: 230.0.0-dev.1

- name: bits-service-release-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: metadata
    file: version/bits-service-release/version
    private_key: {{github-private-key}}
    initial_version: 0.0.0-dev.2

- name: cf-bosh1-deployment-events
  type: semver
  source: &deployment-events-source
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: events
    file: events/cf-bosh1/deployment-deleted
    private_key: {{github-private-key}}

- name: cf-bosh2-deployment-events
  type: semver
  source:
    <<: *deployment-events-source
    file: events/cf-bosh2/deployment-deleted

- name: cf-dea-aws-deployment-events
  type: semver
  source:
    <<: *deployment-events-source
    file: events/cf-dea-aws/deployment-deleted

- name: cf-diego-aws-deployment-events
  type: semver
  source:
    <<: *deployment-events-source
    file: events/cf-diego-aws/deployment-deleted

bosh1-params: &bosh1-params
  BOSH_TARGET: {{bosh-target}}
  BOSH_USERNAME: {{bosh-username}}
  BOSH_PASSWORD: {{bosh-password}}

bosh2-params: &bosh2-params
  BOSH_TARGET: {{bosh2-target}}
  BOSH_USERNAME: {{bosh2-username}}
  BOSH_PASSWORD: {{bosh2-password}}

aws-bosh-params: &aws-bosh-params
  BOSH_TARGET: {{aws-bosh-target}}
  BOSH_USERNAME: {{aws-bosh-username}}
  BOSH_PASSWORD: {{aws-bosh-password}}

boshlite2-bsmt-preparation-errand-config: &boshlite2-bsmt-preparation-errand-config
  params:
    <<: *bosh2-params
    DEPLOYMENT_NAME: cf-warden
    ERRAND_NAME: bsmt_preparation

boshlite1-bsmt-preparation-errand-config: &boshlite1-bsmt-preparation-errand-config
  params:
    <<: *bosh1-params
    DEPLOYMENT_NAME: cf-warden
    ERRAND_NAME: bsmt_preparation

boshlite2-bsmt-verification-errand-config: &boshlite2-bsmt-verification-errand-config
  params:
    <<: *bosh2-params
    DEPLOYMENT_NAME: cf-warden
    ERRAND_NAME: bsmt_verification

boshlite1-bsmt-verification-errand-config: &boshlite1-bsmt-verification-errand-config
  params:
    <<: *bosh1-params
    DEPLOYMENT_NAME: cf-warden
    ERRAND_NAME: bsmt_verification

jobs:
# BITS-SERVICE
- name: run-unit-and-integration-tests
  plan:
  - aggregate:
    - { get: bits-service, trigger: true }
    - { get: ci-tasks, trigger: true }
  - task: Run tests
    file: ci-tasks/tasks/run-service-tests.yml

- name: bump-bits-service-release
  plan:
  - aggregate:
    - { get: bits-service, passed: [run-unit-and-integration-tests], trigger: true }
    - { get: ci-tasks, trigger: true }
    - { get: git-bits-service-release }
  - task: Bump bits-service-release
    file: ci-tasks/tasks/bump-release.yml
  - put: git-bits-service-release
    params: {repository: bumped/git-bits-service-release}


- name: run-bits-service-client-tests
  plan:
  - { get: git-bits-service-client, trigger: true }
  - { get: git-bits-service-ci }
  - task: Run tests
    file: git-bits-service-ci/tasks/run-bits-service-client-tests.yml


- name: create-and-upload-release
  plan:
  - aggregate:
    - { get: bits-service-release-version, params: { pre: dev } }
    - { get: git-bits-service-release, trigger: true }
    - { get: ci-tasks, trigger: true }
    - { get: bits-service-deployment-manifest-generation-tools } # pure "new-version-blocker"
  - put: bits-service-release-version
    params: { file: bits-service-release-version/number }
  - task: Create release
    file: ci-tasks/tasks/create-bits-release.yml
    config: { params: { VERSION_FILE: ../bits-service-release-version/number } }
  - put: bits-service-release-tarball
    params: { file: releases/*.tgz }

- name: deploy-with-S3
  serial: true
  serial_groups: [bits-deployment-s3]
  plan:
  - aggregate:
    - { get: bits-service-release-tarball, trigger: true }
    - { get: bits-service-release-version }
    - { get: bits-service-deployment-manifest-generation-tools, passed: [create-and-upload-release] }
    - { get: ci-tasks, trigger: true}
    - { get: ci-deployment-manifest-templates, trigger: true}
    - { get: stemcell, resource: boshlite-stemcell }
  - task: Create deployment manifest
    file: ci-tasks/tasks/create-bits-manifest.yml
    config:
      params:
        <<: *bosh1-params
        BITS_DIRECTORY_KEY: {{s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
  - put: boshlite1-s3-deployment
    attempts: 3
    params: &boshlite1-bits-service-deployment-params
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases: ["bits-service-release-tarball/*.tgz"]

- name: run-system-tests-S3
  serial: true
  serial_groups: [bits-deployment-s3]
  plan:
  - aggregate:
    - { get: bits-service-release-tarball, passed: [deploy-with-S3], trigger: true }
    - { get: bits-service-system-test-source }
    - { get: ci-tasks }
  - task: Run tests
    attempts: 3
    file: ci-tasks/tasks/run-release-tests.yml
    config:
      params:
        <<: *bosh1-params
        BITS_SERVICE_PRIVATE_ENDPOINT_IP: 10.250.1.2
        RELEASE_NAME: bits-service-s3

- name: deploy-with-LOCAL
  serial: true
  serial_groups: [bits-deployment-local]
  plan:
  - aggregate:
    - { get: bits-service-release-tarball, trigger: true }
    - { get: bits-service-release-version }
    - { get: bits-service-deployment-manifest-generation-tools, passed: [create-and-upload-release] }
    - { get: ci-tasks, trigger: true}
    - { get: ci-deployment-manifest-templates, trigger: true}
    - { get: stemcell, resource: boshlite-stemcell }
  - task: Create deployment manifest
    file: ci-tasks/tasks/create-bits-manifest.yml
    config:
      params:
        <<: *bosh1-params
        BITS_DIRECTORY_KEY: another-directory
        BLOBSTORE_TYPE: local
  - put: boshlite1-local-deployment
    attempts: 3
    params: *boshlite1-bits-service-deployment-params
  - put: s3-bits-service-manifest
    params: { file: manifests/manifest-*.yml }

- name: run-system-tests-LOCAL
  serial: true
  serial_groups: [bits-deployment-local]
  plan:
  - aggregate:
    - { get: s3-bits-service-manifest, passed: [deploy-with-LOCAL], trigger: true }
    - { get: bits-service-release-tarball,  passed: [deploy-with-LOCAL], trigger: true }
    - { get: bits-service-system-test-source }
    - { get: ci-tasks }
  - task: Run tests
    attempts: 3
    file: ci-tasks/tasks/run-release-tests.yml
    config:
      params:
        <<: *bosh1-params
        BITS_SERVICE_PRIVATE_ENDPOINT_IP: 10.250.0.2
        RELEASE_NAME: bits-service-local

- name: deploy-with-WEBDAV
  serial: true
  serial_groups: [bits-deployment-webdav]
  plan:
  - aggregate:
    - { get: bits-service-release-tarball, trigger: true }
    - { get: bits-service-release-version }
    - { get: bits-service-deployment-manifest-generation-tools, passed: [create-and-upload-release] }
    - { get: ci-tasks, trigger: true}
    - { get: ci-deployment-manifest-templates, trigger: true}
    - { get: stemcell, resource: boshlite-stemcell }
  - task: Create deployment manifest
    file: ci-tasks/tasks/create-bits-manifest.yml
    config:
      params:
        <<: *bosh1-params
        BLOBSTORE_TYPE: webdav
  - put: boshlite1-webdav-deployment
    attempts: 3
    params: *boshlite1-bits-service-deployment-params

- name: run-system-tests-WEBDAV
  serial: true
  serial_groups: [bits-deployment-webdav]
  plan:
  - aggregate:
    - get: bits-service-release-tarball
      passed: [deploy-with-WEBDAV]
      trigger: true
    - get: bits-service-system-test-source
    - get: ci-tasks
  - task: run-tests
    attempts: 3
    file: ci-tasks/tasks/run-release-tests.yml
    config:
      params:
        <<: *bosh1-params
        BITS_SERVICE_PRIVATE_ENDPOINT_IP: 10.250.3.2
        RELEASE_NAME: bits-service-webdav

- name: upload-bits-service-release-and-manifest-to-acceptance
  plan:
  - aggregate:
    - get: s3-bits-service-manifest
      passed:
        - run-system-tests-LOCAL
      trigger: true
    - get: bits-service-release-tarball
      passed: &run-system-tests-passed
        - run-system-tests-LOCAL
        - run-system-tests-S3
        - run-system-tests-WEBDAV
      trigger: true
    - get: bits-service-release-version
    - get: ci-tasks
  - aggregate:
    - task: upload-bits-service-release-to-acceptance
      file: ci-tasks/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: ci-tasks
          - name: bits-service-release-tarball
          - name: bits-service-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: bits-service-release-tarball/*.tgz
          VERSION_FILE: bits-service-release-version/number
          RELEASE_NAME: bits-service-release
    - task: upload-bits-service-manifest-to-acceptance
      file: ci-tasks/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: ci-tasks
          - name: s3-bits-service-manifest
          - name: bits-service-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: s3-bits-service-manifest/*.yml
          VERSION_FILE: bits-service-release-version/number
          RELEASE_NAME: bits-service-release

# CF-RELEASE
- name: create-cf-release
  serial: true
  plan:
  - aggregate:
    - { get: cf-release-version, params: { pre: dev } }
    - { get: git-cf-release, trigger: true }
    - { get: ci-tasks, trigger: true }
  - task: Patch blobstore to allow signed PUT URLs
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: git-cf-release
        - name: ci-tasks
      outputs: [ name: git-cf-release-patched ]
      params:
        GIT_REPO_DIR: git-cf-release/src/capi-release
        PATCH_URL: https://github.com/petergtz/capi-release/commit/2d47bd42bc656006b57c464752c6d593b67ddcae.patch
        INPUT_DIR: git-cf-release
        OUTPUT_DIR: git-cf-release-patched
      run: { path: ci-tasks/scripts/git-apply-patch.sh }
  - task: Show patched blobstore code
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs: [ name: git-cf-release-patched ]
      run: { path: cat, args: ["git-cf-release-patched/src/capi-release/jobs/blobstore/templates/blobstore.conf.erb"] }
  - task: Create cf-release tarball
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: ci-tasks
        - name: git-cf-release-patched
      outputs:
        - name: releases
        - name: cf-release-version
      params:
        VERSION_FILE: cf-release-version/number
        CF_RELEASE_DIR: git-cf-release-patched
      run: { path: ci-tasks/scripts/create-cf-release.sh }
  - put: cf-release-tarball
    params: { file: releases/*.tgz }
  - put: cf-release-version
    params: { file: cf-release-version/number }

- name: cf-release-done
  plan:
  - aggregate:
    - get: git-cf-release
      passed: &cf-release-done-passed
        - enable-BITS-SERVICE-and-run-CATs
        - enable-BITS-SERVICE-diego-and-run-CATs
        - migration-backwards-bosh1
        - migration-backwards-bosh2
    - get: cf-release-tarball
      passed: *cf-release-done-passed
      trigger: true
    - get: cf-release-version
      passed: *cf-release-done-passed
    - get: ci-tasks
      resource: git-bits-service-ci
      passed: *cf-release-done-passed
    - get: git-bits-service-ci
      passed: *cf-release-done-passed
    - get: git-bits-service-release
      passed: *cf-release-done-passed
  - task: create-bosh-lite-manifest
    file: ci-tasks/tasks/update-cf-manifest.yml
    config:
      params:
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/local.yml
        BOSH_TARGET: {{bosh-target}}
  - aggregate:
    - put: s3-cf-manifest
      params: { file: manifests/*.yml }
    - task: upload-cf-release-to-acceptance
      file: ci-tasks/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: ci-tasks
          - name: cf-release-tarball
          - name: cf-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: cf-release-tarball/*.tgz
          VERSION_FILE: cf-release-version/number
          RELEASE_NAME: cf-release
    - task: upload-manifest-to-acceptance
      file: ci-tasks/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: ci-tasks
          - name: manifests
          - name: cf-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: manifests/*.yml
          VERSION_FILE: cf-release-version/number
          RELEASE_NAME: cf-release

- name: manually-delete-cf-dea-aws
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - { get: ci-tasks }
    - { get: cf-dea-aws-deployment-events, params: { bump: major } }
  - task: delete-deployment
    file: ci-tasks/tasks/delete-deployment.yml
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf1
  - put: cf-dea-aws-deployment-events
    params: { file: cf-dea-aws-deployment-events/number }

- name: deploy-and-test-cf-dea-aws
  serial: true
  serial_groups: [cf1-aws-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release,     passed: [create-cf-release] }
    - { get: cf-release-tarball, passed: [create-cf-release], trigger: true}
    - { get: cf-release-version, passed: [create-cf-release] }
    - { get: bits-service-release-tarball, passed: *run-system-tests-passed, trigger: true}
    - { get: git-bits-service-release }
    - { get: git-bits-service-ci, trigger: true }
    - { get: cf-dea-aws-deployment-events, passed: [manually-delete-cf-dea-aws], trigger: true}
    - { get: stemcell, resource: aws-stemcell }
  - task: Generate CF deployment manifest with bits-service disabled
    file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
    config: &update-aws-cf-manifest-cf1-config
      params:
        IAAS: aws
        MANIFEST_STUBS: >
          manifests/cf-aws-network-1.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/disable-diego-backend.yml
          manifests/hm9000-job.yml
        CF_USER: {{aws-cf1-user}}
        CF_PASSWORD: {{aws-cf1-password}}
        CF_DOMAIN: {{aws-cf1-domain}}
        CF_PUBLIC_IP: {{aws-cf1-public-ip}}
        CF_DEPLOYMENT_NAME: cf1
        BITS_DIRECTORY_KEY: {{cf1-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf1-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf1-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf1-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
        BOSH_TARGET: {{aws-bosh-target}}
  - put: aws-dea-deployment
    attempts: 2
    params: *params-deployment-cf-release-bits-service-release
  - task: Run CATs
    attempts: 3
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *aws-bosh-params
        ERRAND_NAME: acceptance_tests
        DEPLOYMENT_NAME: cf1
    on_failure: &inform-pipeline-operator-dea-aws-cats
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-dea-aws]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-dea-aws)

- name: enable-BITS-SERVICE-and-run-CATs
  serial: true
  serial_groups: [cf1-aws-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release, passed: [deploy-and-test-cf-dea-aws] }
    - { get: cf-release-tarball, passed: [deploy-and-test-cf-dea-aws], trigger: true}
    - { get: bits-service-release-tarball, passed: [deploy-and-test-cf-dea-aws], trigger: true}
    - { get: cf-release-version, passed: [deploy-and-test-cf-dea-aws] }
    - { get: git-bits-service-release, passed: [deploy-and-test-cf-dea-aws] }
    - { get: git-bits-service-ci, passed: [deploy-and-test-cf-dea-aws] }
    - { get: stemcell, resource: aws-stemcell }
  - task: Generate CF deployment manifest with bits-service enabled
    file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
    config:
      <<: *update-aws-cf-manifest-cf1-config
      params:
        MANIFEST_STUBS: >
          manifests/cf-aws-network-1.yml
          manifests/enable-bits.yml
          manifests/bits-network-aws.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/disable-diego-backend.yml
          manifests/hm9000-job.yml
  - put: aws-dea-deployment
    attempts: 2
    params: *params-deployment-cf-release-bits-service-release
  - task: Run CATs
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 3
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf1
        ERRAND_NAME: acceptance_tests
    on_failure: *inform-pipeline-operator-dea-aws-cats
  - put: s3-cf-aws-manifest
    params: { file: manifests/*.yml }

- name: manually-delete-cf-diego-aws
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - { get: ci-tasks }
    - { get: cf-diego-aws-deployment-events, params: { bump: major } }
  - task: delete-deployment
    file: ci-tasks/tasks/delete-deployment.yml
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf2
  - put: cf-diego-aws-deployment-events
    params: { file: cf-diego-aws-deployment-events/number }

- name: deploy-and-test-cf-diego-aws
  serial: true
  serial_groups: [cf2-aws-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release, passed: [create-cf-release] }
    - { get: cf-release-version, passed: [create-cf-release], trigger: true }
    - { get: cf-release-tarball, passed: [create-cf-release] }
    - { get: bits-service-release-tarball, passed: *run-system-tests-passed, trigger: true }
    - { get: cf-release-version, passed: [create-cf-release] }
    - { get: git-bits-service-release }
    - { get: git-bits-service-ci, trigger: true}
    - { get: cf-diego-aws-deployment-events, passed: [manually-delete-cf-diego-aws], trigger: true}
    - { get: stemcell, resource: aws-stemcell }
    - { get: diego-release-tarball }
  - task: Generate CF deployment manifest with bits-service disabled
    file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
    config: &update-aws-cf-manifest-cf2-config
      params:
        IAAS: aws
        MANIFEST_STUBS: manifests/cf-aws-network-2.yml manifests/enable-diego-cats.yml ../git-bits-service-release/templates/s3.yml
        CF_USER: {{aws-cf2-user}}
        CF_PASSWORD: {{aws-cf2-password}}
        CF_DOMAIN: {{aws-cf2-domain}}
        CF_PUBLIC_IP: {{aws-cf2-public-ip}}
        CF_DEPLOYMENT_NAME: cf2
        BITS_DIRECTORY_KEY: {{cf2-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf2-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf2-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf2-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
        BOSH_TARGET: {{aws-bosh-target}}
  - put: aws-diego-deployment
    attempts: 2
    params: &params-deployment-cf-release-bits-service-release-diego-release
     manifest: manifests/manifest.yml
     stemcells: ["stemcell/stemcell.tgz"]
     releases: ["cf-release-tarball/cf-*.tgz", "bits-service-release-tarball/*.tgz", "diego-release-tarball/*.tgz"]
  - task: Run CATs
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 3
    config:
      params:
        <<: *aws-bosh-params
        ERRAND_NAME: acceptance_tests
        DEPLOYMENT_NAME: cf2
    on_failure: &inform-pipeline-operator-diego-aws-cats
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-diego-aws]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-diego-aws)

- name: enable-BITS-SERVICE-diego-and-run-CATs
  serial: true
  serial_groups: [cf2-aws-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release, passed: [deploy-and-test-cf-diego-aws] }
    - { get: cf-release-version, passed: [deploy-and-test-cf-diego-aws] }
    - { get: cf-release-tarball, passed: [deploy-and-test-cf-diego-aws], trigger: true }
    - { get: bits-service-release-tarball, passed: [deploy-and-test-cf-diego-aws], trigger: true }
    - { get: cf-release-version, passed: [deploy-and-test-cf-diego-aws] }
    - { get: git-bits-service-release, passed: [deploy-and-test-cf-diego-aws] }
    - { get: git-bits-service-ci, passed: [deploy-and-test-cf-diego-aws] }
    - { get: stemcell, resource: aws-stemcell }
  - task: Generate CF deployment manifest with biits-service enabled
    file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
    config:
      <<: *update-aws-cf-manifest-cf2-config
      params:
        MANIFEST_STUBS: manifests/cf-aws-network-2.yml manifests/enable-diego-cats.yml manifests/enable-bits.yml manifests/bits-network-aws.yml ../git-bits-service-release/templates/s3.yml
  - put: aws-diego-deployment
    attempts: 2
    params: *params-deployment-cf-release-bits-service-release
  - task: Run CATs
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 3
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf2
        ERRAND_NAME: acceptance_tests
    on_failure: *inform-pipeline-operator-diego-aws-cats

# Migration

- name: manually-delete-cf-bosh1
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - get: ci-tasks
    - get: cf-bosh1-deployment-events
      params: { bump: major }
  - task: delete-deployment
    file: ci-tasks/tasks/delete-deployment.yml
    config:
      params:
        <<: *bosh1-params
        DEPLOYMENT_NAME: cf-warden
  - put: cf-bosh1-deployment-events
    params: { file: cf-bosh1-deployment-events/number }

- name: migration-bosh1 (S3)
  serial: true
  serial_groups: [cf-bosh1-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release, passed: [create-cf-release] }
    - { get: cf-release-version, passed: [create-cf-release], trigger: true }
    - { get: cf-release-tarball, passed: [create-cf-release], trigger: true  }
    - { get: bits-service-release-tarball, passed: *run-system-tests-passed, trigger: true}
    - { get: git-bits-service-release }
    - { get: git-bits-service-ci, trigger: true }
    - { get: cf-bosh1-deployment-events, passed: [manually-delete-cf-bosh1], trigger: true }
    - { get: stemcell, resource: boshlite-stemcell }
  - task: Generate CF deployment manifest with bits-service disabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config: &update-boshlite1-cf-manifest-config
      params:
        IAAS: lite
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/bsmt-errands.yml
        CF_USER: admin
        CF_PASSWORD: admin
        CF_DOMAIN: bosh-lite.com
        BITS_DIRECTORY_KEY: {{cf-migration-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf-migration-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf-migration-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf-migration-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
        BOSH_TARGET: {{bosh-target}}
  - put: boshlite1-deployment
    params: *params-deployment-cf-release-bits-service-release
  - task: Run migration preparation tests
    attempts: 3
    file: git-bits-service-ci/tasks/run-errand.yml
    config: *boshlite1-bsmt-preparation-errand-config
    on_failure: &inform-pipeline-operator-bosh1-migration-tests
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-bosh1]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-bosh1)
  - task: Generate CF deployment manifest with bits-service enabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite1-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-network-bosh-lite.yml
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/bsmt-errands.yml
  - put: boshlite1-deployment
    params: *params-deployment-cf-release-bits-service-release
  - task: Run migration verification tests
    attempts: 3
    file: git-bits-service-ci/tasks/run-errand.yml
    config: *boshlite1-bsmt-verification-errand-config
    on_failure: *inform-pipeline-operator-bosh1-migration-tests

- name: migration-backwards-bosh1
  serial: true
  serial_groups: [cf-bosh1-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release, passed: [migration-bosh1 (S3)] }
    - { get: cf-release-tarball, passed: [migration-bosh1 (S3)], trigger: true}
    - { get: bits-service-release-tarball, passed: [migration-bosh1 (S3)], trigger: true}
    - { get: cf-release-version, passed: [migration-bosh1 (S3)] }
    - { get: git-bits-service-ci, passed: [migration-bosh1 (S3)] }
    - { get: git-bits-service-release, passed: [migration-bosh1 (S3)] }
    - { get: stemcell, resource: boshlite-stemcell }
  - task: Generate CF deployment manifest with bits-service enabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite1-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-network-bosh-lite.yml
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/bsmt-errands.yml
  - put: boshlite1-deployment
    params: *params-deployment-cf-release-bits-service-release
  - task: Run migration preparation tests
    attempts: 3
    file: git-bits-service-ci/tasks/run-errand.yml
    config: *boshlite1-bsmt-preparation-errand-config
    on_failure: *inform-pipeline-operator-bosh1-migration-tests
  - task: Generate CF deployment manifest with bits-service disabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite1-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/bsmt-errands.yml
  - put: boshlite1-deployment
    params: &params-deployment-cf-release
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases: ["cf-release-tarball/cf-*.tgz"]
  - task: Run migration verification tests
    attempts: 3
    file: git-bits-service-ci/tasks/run-errand.yml
    config: *boshlite1-bsmt-verification-errand-config
    on_failure: &inform-pipeline-operator-bosh1-migration-tests

- name: manually-delete-cf-bosh2
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - { get: ci-tasks }
    - { get: cf-bosh2-deployment-events, params: { bump: major} }
  - task: delete-deployment
    file: ci-tasks/tasks/delete-deployment.yml
    config:
      params:
        <<: *bosh2-params
        DEPLOYMENT_NAME: cf-warden
  - put: cf-bosh2-deployment-events
    params: { file: cf-bosh2-deployment-events/number }

# no-migration tests for webdav
- name: migration-bosh2 (webdav)
  serial: true
  serial_groups: [cf-bosh2-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release, passed: [create-cf-release] }
    - { get: cf-release-version, passed: [create-cf-release], trigger: true }
    - { get: cf-release-tarball, passed: [create-cf-release]}
    - { get: bits-service-release-tarball, passed: *run-system-tests-passed, trigger: true }
    - { get: git-bits-service-release }
    - { get: git-bits-service-ci, trigger: true }
    - { get: cf-bosh2-deployment-events, passed: [manually-delete-cf-bosh2], trigger: true }
    - { get: stemcell, resource: boshlite-stemcell }
  - task: Generate CF deployment manifest with bits-service disabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config: &update-boshlite2-cf-manifest-config
      params:
        IAAS: lite
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/webdav-cf.yml
          manifests/bsmt-errands.yml
        CF_USER: admin
        CF_PASSWORD: admin
        CF_DOMAIN: bosh-lite.com
        BITS_DIRECTORY_KEY: {{cf-migration-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf-migration-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf-migration-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf-migration-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: webdav
        BOSH_TARGET: {{bosh2-target}}
  - put: boshlite2-deployment
    params: &params-deployment-cf-release-bits-service-release
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases: ["cf-release-tarball/cf-*.tgz", "bits-service-release-tarball/*.tgz"]
  - task: Run migration preparation tests
    attempts: 3
    file: git-bits-service-ci/tasks/run-errand.yml
    config: *boshlite2-bsmt-preparation-errand-config
    on_failure: &inform-pipeline-operator-bosh2-migration-tests
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-bosh2]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-bosh2)
  - task: Generate CF deployment manifest with bits-service enabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite2-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-network-bosh-lite.yml
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          ../git-bits-service-release/templates/webdav-cf.yml
          manifests/bsmt-errands.yml
  - put: boshlite2-deployment
    params: *params-deployment-cf-release-bits-service-release
  - task: Run migration verification tests
    attempts: 3
    file: git-bits-service-ci/tasks/run-errand.yml
    config: *boshlite2-bsmt-verification-errand-config
    on_failure: *inform-pipeline-operator-bosh2-migration-tests

- name: migration-backwards-bosh2
  serial: true
  serial_groups: [cf-bosh2-deployment]
  plan:
  - aggregate:
    - { get: git-cf-release, passed: [migration-bosh2 (webdav)] }
    - { get: cf-release-tarball, passed: [migration-bosh2 (webdav)], trigger: true }
    - { get: bits-service-release-tarball, passed: [migration-bosh2 (webdav)], trigger: true }
    - { get: cf-release-version, passed: [migration-bosh2 (webdav)] }
    - { get: git-bits-service-ci, passed: [migration-bosh2 (webdav)] }
    - { get: git-bits-service-release, passed: [migration-bosh2 (webdav)] }
    - { get: stemcell, resource: boshlite-stemcell }
  - task: Generate CF deployment manifest with bits-service enabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite2-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-network-bosh-lite.yml
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          ../git-bits-service-release/templates/webdav-cf.yml
          manifests/bsmt-errands.yml
  - put: boshlite2-deployment
    params: *params-deployment-cf-release-bits-service-release
  - task: Run preparation tests
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 3
    config: *boshlite2-bsmt-preparation-errand-config
    on_failure: *inform-pipeline-operator-bosh2-migration-tests
  - task: Update CF deployment manifest with bits-service disabled
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite2-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/webdav-cf.yml
          manifests/bsmt-errands.yml
  - put: boshlite2-deployment
    params: *params-deployment-cf-release
  - task: Run verification tests
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 3
    config: *boshlite2-bsmt-verification-errand-config
    on_failure: *inform-pipeline-operator-bosh2-migration-tests

# Infrastructure
- name: recreate-bosh-lite-1
  serial: true
  plan:
  - aggregate:
    - get: git-bits-service-ci
    - get: bits-service
    - get: bits-service-release-tarball
      passed: [upload-bits-service-release-and-manifest-to-acceptance]
    - get: cf-release-tarball
      passed: [create-cf-release]
  - task: recreate-bosh-lite
    file: git-bits-service-ci/tasks/recreate-bosh-lite.yml
    config:
      params:
        SSH_CONNECTION_STRING: root@10.155.248.181
        SSH_KEY: {{github-private-key}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        BOSH_DIRECTOR_IP: 192.168.50.4
        VAGRANT_GATEWAY: 192.168.50.1
        DIEGO_RELEASE_VERSION: {{diego-release-version}}
        GARDEN_LINUX_RELEASE_VERSION: {{garden-linux-release-version}}
        ETCD_RELEASE_VERSION: {{etcd-release-version}}
        CFLINUXFS2_ROOTFS_RELEASE_VERSION: {{cflinuxfs2-rootfs-release-version}}
  - aggregate:
    - task: upload-last-bits-service-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: bits-service-release-tarball
        params:
          <<: *bosh1-params
          RELEASE_FILE: bits-service-release-tarball/*.tgz
    - task: upload-last-cf-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: cf-release-tarball
        params:
          <<: *bosh1-params
          RELEASE_FILE: cf-release-tarball/*.tgz

- name: recreate-bosh-lite-acceptance
  serial: true
  plan:
  - aggregate:
    - get: git-bits-service-ci
    - get: bits-service
    - get: bits-service-release-tarball
      passed: [upload-bits-service-release-and-manifest-to-acceptance]
    - get: cf-release-tarball
      passed: [create-cf-release]
  - task: recreate-bosh-lite
    file: git-bits-service-ci/tasks/recreate-bosh-lite.yml
    config:
      params:
        SSH_CONNECTION_STRING: root@10.155.248.164
        SSH_KEY: {{github-private-key}}
        BOSH_USERNAME: {{bosh-acceptance-username}}
        BOSH_PASSWORD: {{bosh-acceptance-password}}
        BOSH_DIRECTOR_IP: 192.168.150.4
        VAGRANT_GATEWAY: 192.168.150.1
        DIEGO_RELEASE_VERSION: {{diego-release-version}}
        GARDEN_LINUX_RELEASE_VERSION: {{garden-linux-release-version}}
        ETCD_RELEASE_VERSION: {{etcd-release-version}}
        CFLINUXFS2_ROOTFS_RELEASE_VERSION: {{cflinuxfs2-rootfs-release-version}}
  - aggregate:
    - task: upload-last-bits-service-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: bits-service-release-tarball
        params:
          BOSH_TARGET: {{bosh-acceptance-target}}
          BOSH_USERNAME: {{bosh-acceptance-username}}
          BOSH_PASSWORD: {{bosh-acceptance-password}}
          RELEASE_FILE: bits-service-release-tarball/*.tgz
    - task: upload-last-cf-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-release
          - name: cf-release-tarball
        params:
          BOSH_TARGET: {{bosh-acceptance-target}}
          BOSH_USERNAME: {{bosh-acceptance-username}}
          BOSH_PASSWORD: {{bosh-acceptance-password}}
          RELEASE_FILE: cf-release-tarball/*.tgz

- name: cleanup-bosh-1
  serial: true
  plan:
  - get: git-bits-service-ci
  - get: nightly-timer
    trigger: true
  - task: cleanup-bosh
    file: git-bits-service-ci/tasks/bosh-cleanup.yml
    config:
      params: *bosh1-params

- name: cleanup-bosh-acceptance
  serial: true
  plan:
  - get: git-bits-service-ci
  - get: nightly-timer
    trigger: true
  - task: cleanup-bosh
    file: git-bits-service-ci/tasks/bosh-cleanup.yml
    config:
      params:
        BOSH_USERNAME: {{bosh-acceptance-username}}
        BOSH_PASSWORD: {{bosh-acceptance-password}}
        BOSH_TARGET: {{bosh-acceptance-target}}
