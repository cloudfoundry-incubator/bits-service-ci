groups:
- name: all
  jobs:
  - run-unit-and-integration-tests
  - run-bits-service-client-tests
  - create-and-upload-release
  - deploy-with-S3
  - deploy-with-LOCAL
  - deploy-with-WEBDAV
  - run-system-tests-S3
  - run-system-tests-LOCAL
  - run-system-tests-WEBDAV
  - upload-bits-service-release-and-manifest-to-acceptance
  - cc-tests
  - create-cf-release
  - deploy-cf-dea-aws
  - CATs-aws-with-bits
  - cf-release-done
  - CATs-aws
  - deploy-cf-diego-aws
  - CATs-diego-aws
  - enable-BITS-SERVICE-diego
  - CATs-diego-aws-with-bits
  - enable-BITS-SERVICE
  - release-cf2-aws-release-lock
  - release-cf1-aws-release-lock
  - preparation-migration-backwards-bosh1
  - disable-BITS-SERVICE-bosh1
  - verification-migration-backwards-bosh1
  - verification-migration-bosh1
  - enable-BITS-SERVICE-bosh1
  - prepare-migration-bosh1
  - release-cf-bosh1-lock
  - deploy-cf-bosh1 (S3)
  - preparation-migration-backwards-bosh2
  - disable-BITS-SERVICE-bosh2
  - verification-migration-backwards-bosh2
  - verification-migration-bosh2
  - enable-BITS-SERVICE-bosh2
  - prepare-migration-bosh2
  - release-cf-bosh2-lock
  - deploy-cf-bosh2 (webdav)
  - manually-delete-cf-dea-aws
  - manually-delete-cf-diego-aws
  - manually-delete-cf-bosh1
  - manually-delete-cf-bosh2
  - bump-bits-service-release
- name: bits-service
  jobs:
  - run-unit-and-integration-tests
  - run-bits-service-client-tests
- name: bits-service-release
  jobs:
  - create-and-upload-release
  - deploy-with-S3
  - deploy-with-LOCAL
  - deploy-with-WEBDAV
  - run-system-tests-S3
  - run-system-tests-LOCAL
  - run-system-tests-WEBDAV
  - upload-bits-service-release-and-manifest-to-acceptance
- name: cloud-controller
  jobs:
  - cc-tests
- name: cf-release
  jobs:
  - create-cf-release
  - deploy-cf-dea-aws
  - CATs-aws-with-bits
  - cf-release-done
  - enable-BITS-SERVICE
  - CATs-aws
  - release-cf1-aws-release-lock
  - deploy-cf-diego-aws
  - CATs-diego-aws
  - enable-BITS-SERVICE-diego
  - CATs-diego-aws-with-bits
  - release-cf2-aws-release-lock
- name: migration
  jobs:
  - preparation-migration-backwards-bosh1
  - disable-BITS-SERVICE-bosh1
  - verification-migration-backwards-bosh1
  - verification-migration-bosh1
  - enable-BITS-SERVICE-bosh1
  - prepare-migration-bosh1
  - release-cf-bosh1-lock
  - deploy-cf-bosh1 (S3)
  - preparation-migration-backwards-bosh2
  - disable-BITS-SERVICE-bosh2
  - verification-migration-backwards-bosh2
  - verification-migration-bosh2
  - enable-BITS-SERVICE-bosh2
  - prepare-migration-bosh2
  - release-cf-bosh2-lock
  - deploy-cf-bosh2 (webdav)
- name: infrastructure
  jobs:
  - recreate-bosh-lite-1
  - recreate-bosh-lite-acceptance
  - cleanup-bosh-1
  - cleanup-bosh-acceptance

resources:
- name: aws-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-aws-xen-ubuntu-trusty-go_agent }

- name: boshlite-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-warden-boshlite-ubuntu-trusty-go_agent }

- name: s3-bits-service-release
  type: s3
  source: &s3-resource
    access_key_id: {{s3-blobstore-access-key-id}}
    secret_access_key: {{s3-blobstore-secret-access-key}}
    bucket: ci-bits-service-artifacts
    region_name: eu-west-1
    regexp: bits-service-release/bits-service-(.*).tgz
    private: false

- name: s3-bits-service-manifest
  type: s3
  source:
    <<: *s3-resource
    regexp: bits-service-manifest/manifest-(.*).yml

- name: diego-release-tarball
  type: bosh-io-release
  source: { repository: cloudfoundry/diego-release }

- name: s3-cf-release
  type: s3
  source:
    <<: *s3-resource
    regexp: cf-release/cf-(.*).tgz

- name: s3-cf-manifest
  type: s3
  source:
    <<: *s3-resource
    regexp: cf-manifest/manifest-(.*).yml

- name: s3-cf-aws-manifest
  type: s3
  source:
    <<: *s3-resource
    regexp: cf-aws-manifest/manifest-(.*).yml

- name: git-bits-service-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["manifests/*", "scripts/*", "tasks/*"]

- name: ci-tasks
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["scripts/*", "tasks/*"]

- name: git-cloud-controller
  type: git
  source:
    uri: https://github.com/cloudfoundry/cloud_controller_ng.git
    branch: bits-service

- name: git-capi-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/capi-release.git
    branch: bits-service
    private_key: {{github-private-key}}

- name: git-bits-service
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service.git
    branch: master

- name: git-bits-service-client
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service-client.git
    branch: master

- name: git-bits-service-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-release.git
    branch: master
    private_key: {{github-private-key}}

- name: bits-service-deployment-manifest-generation-tools
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-release.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["templates/*", "scripts/*"]

- name: bits-service-system-test-source
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service-release.git
    branch: master
    private_key: {{github-private-key}}
    paths: ["spec/*"]

- name: git-cf-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-release.git
    branch: master

- name: nightly-timer
  type: time
  source:
    interval: 24h

- name: aws-dea-deployment
  type: bosh-deployment
  source: &cf1-deployment-source
    target: {{aws-bosh-target}}
    username: {{aws-bosh-username}}
    password: {{aws-bosh-password}}
    deployment: cf1

- name: aws-diego-deployment
  type: bosh-deployment
  source:
    <<: *cf1-deployment-source
    deployment: cf2

- name: boshlite1-deployment
  type: bosh-deployment
  source: &boshlite1-source
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: cf-warden

- name: boshlite1-s3-deployment
  type: bosh-deployment
  source:
    <<: *boshlite1-source
    deployment: bits-service-s3

- name: boshlite1-webdav-deployment
  type: bosh-deployment
  source:
    <<: *boshlite1-source
    deployment: bits-service-webdav

- name: boshlite1-local-deployment
  type: bosh-deployment
  source:
    <<: *boshlite1-source
    deployment: bits-service-local

- name: boshlite2-deployment
  type: bosh-deployment
  source:
    target: {{bosh2-target}}
    username: {{bosh2-username}}
    password: {{bosh2-password}}
    deployment: cf-warden

- name: cf-release-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: metadata
    file: version/cf-release/version
    private_key: {{github-private-key}}
    initial_version: 230.0.0-dev.1

- name: bits-service-release-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: metadata
    file: version/bits-service-release/version
    private_key: {{github-private-key}}
    initial_version: 0.0.0-dev.2

- name: cf-bosh1-deployment-events
  type: semver
  source: &deployment-events-source
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: events
    file: events/cf-bosh1/deployment-deleted
    private_key: {{github-private-key}}

- name: cf-bosh2-deployment-events
  type: semver
  source:
    <<: *deployment-events-source
    file: events/cf-bosh2/deployment-deleted

- name: cf-dea-aws-deployment-events
  type: semver
  source:
    <<: *deployment-events-source
    file: events/cf-dea-aws/deployment-deleted

- name: cf-diego-aws-deployment-events
  type: semver
  source:
    <<: *deployment-events-source
    file: events/cf-diego-aws/deployment-deleted

#
# locks
#
- name: cf-bosh1-lock
  type: pool
  source: &lock-meta-data
    uri: git@github.com:cloudfoundry-incubator/bits-service-ci.git
    branch: metadata
    pool: locks/cf-bosh1-lock
    private_key: {{github-private-key}}
- name: cf-bosh2-lock
  type: pool
  source: { <<: *lock-meta-data, pool: locks/cf-bosh2-lock }
- name: cf2-aws-deployment-lock
  type: pool
  source: { <<: *lock-meta-data, pool: locks/cf2-aws-deployment }
- name: cf1-aws-deployment-lock
  type: pool
  source: { <<: *lock-meta-data, pool: locks/cf1-aws-deployment }

bosh1-params: &bosh1-params
  BOSH_TARGET: {{bosh-target}}
  BOSH_USERNAME: {{bosh-username}}
  BOSH_PASSWORD: {{bosh-password}}

bosh2-params: &bosh2-params
  BOSH_TARGET: {{bosh2-target}}
  BOSH_USERNAME: {{bosh2-username}}
  BOSH_PASSWORD: {{bosh2-password}}

aws-bosh-params: &aws-bosh-params
  BOSH_TARGET: {{aws-bosh-target}}
  BOSH_USERNAME: {{aws-bosh-username}}
  BOSH_PASSWORD: {{aws-bosh-password}}

jobs:
# BITS-SERVICE
- name: run-unit-and-integration-tests
  plan:
  - aggregate:
    - get: git-bits-service
      trigger: true
    - get: ci-tasks
      trigger: true
  - task: run-tests
    file: ci-tasks/tasks/run-service-tests.yml

- name: bump-bits-service-release
  plan:
  - aggregate:
    - get: git-bits-service
      trigger: true
      passed: [run-unit-and-integration-tests]
    - get: git-bits-service-ci
      trigger: true
    - get: git-bits-service-release
  - task: Bump bits-service-release
    file: git-bits-service-ci/tasks/bump-release.yml
  - put: git-bits-service-release
    params: {repository: bumped/git-bits-service-release}


# BITS-SERVICE-CLIENT
- name: run-bits-service-client-tests
  plan:
  - get: git-bits-service-client
    trigger: true
  - get: git-bits-service-ci
  - task: run-tests
    file: git-bits-service-ci/tasks/run-bits-service-client-tests.yml


# BITS-RELEASE
- name: create-and-upload-release
  plan:
  - aggregate:
    - get: bits-service-release-version
      params: { pre: dev }
    - get: git-bits-service-release
      trigger: true
    - get: ci-tasks
      trigger: true
    - get: bits-service-deployment-manifest-generation-tools # pure "new-version-blocker"
  - put: bits-service-release-version
    params: { file: bits-service-release-version/number }
  - task: create-release
    file: ci-tasks/tasks/create-bits-release.yml
    config:
      params: { VERSION_FILE: ../bits-service-release-version/number }
  - put: s3-bits-service-release
    params: { file: releases/*.tgz }

- name: deploy-with-S3
  serial: true
  serial_groups: [bits-deployment-s3]
  plan:
  - aggregate:
    - { get: s3-bits-service-release, trigger: true }
    - { get: bits-service-release-version }
    - { get: bits-service-deployment-manifest-generation-tools, passed: [create-and-upload-release] }
    - { get: ci-tasks, trigger: true}
    - { get: stemcell, resource: boshlite-stemcell }
  - task: create-manifest
    file: ci-tasks/tasks/create-bits-manifest.yml
    config:
      params:
        <<: *bosh1-params
        BITS_DIRECTORY_KEY: {{s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
  - put: boshlite1-s3-deployment
    params: &boshlite1-bits-service-deployment-params
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases: ["s3-bits-service-release/*.tgz"]

- name: run-system-tests-S3
  serial: true
  serial_groups: [bits-deployment-s3]
  plan:
  - aggregate:
    - get: s3-bits-service-release
      passed: [deploy-with-S3]
      trigger: true
    - get: bits-service-system-test-source
    - get: ci-tasks
  - task: run-tests
    attempts: 3
    file: ci-tasks/tasks/run-release-tests.yml
    config:
      params:
        <<: *bosh1-params
        BITS_SERVICE_ENDPOINT: 10.250.1.2
        RELEASE_NAME: bits-service-s3

- name: deploy-with-LOCAL
  serial: true
  serial_groups: [bits-deployment-local]
  plan:
  - aggregate:
    - { get: s3-bits-service-release, trigger: true }
    - { get: bits-service-release-version }
    - { get: bits-service-deployment-manifest-generation-tools, passed: [create-and-upload-release] }
    - { get: ci-tasks, trigger: true}
    - { get: stemcell, resource: boshlite-stemcell }
  - task: create-manifest
    file: ci-tasks/tasks/create-bits-manifest.yml
    config:
      params:
        <<: *bosh1-params
        BITS_DIRECTORY_KEY: another-directory
        BLOBSTORE_TYPE: local
  - put: boshlite1-local-deployment
    params: *boshlite1-bits-service-deployment-params
  - put: s3-bits-service-manifest
    params: { file: manifests/manifest-*.yml }

- name: run-system-tests-LOCAL
  serial: true
  serial_groups: [bits-deployment-local]
  plan:
  - aggregate:
    - { get: s3-bits-service-manifest, passed: [deploy-with-LOCAL], trigger: true }
    - { get: s3-bits-service-release,  passed: [deploy-with-LOCAL], trigger: true }
    - { get: bits-service-system-test-source }
    - { get: ci-tasks }
  - task: run-tests
    attempts: 3
    file: ci-tasks/tasks/run-release-tests.yml
    config:
      params:
        <<: *bosh1-params
        BITS_SERVICE_ENDPOINT: 10.250.0.2
        RELEASE_NAME: bits-service-local

- name: deploy-with-WEBDAV
  serial: true
  serial_groups: [bits-deployment-webdav]
  plan:
  - aggregate:
    - { get: s3-bits-service-release, trigger: true }
    - { get: bits-service-release-version }
    - { get: bits-service-deployment-manifest-generation-tools, passed: [create-and-upload-release] }
    - { get: ci-tasks, trigger: true}
    - { get: stemcell, resource: boshlite-stemcell }
  - task: create-manifest
    file: ci-tasks/tasks/create-bits-manifest.yml
    config:
      params:
        <<: *bosh1-params
        BLOBSTORE_TYPE: webdav
  - put: boshlite1-webdav-deployment
    params: *boshlite1-bits-service-deployment-params

- name: run-system-tests-WEBDAV
  serial: true
  serial_groups: [bits-deployment-webdav]
  plan:
  - aggregate:
    - get: s3-bits-service-release
      passed: [deploy-with-WEBDAV]
      trigger: true
    - get: bits-service-system-test-source
    - get: ci-tasks
  - task: run-tests
    attempts: 3
    file: ci-tasks/tasks/run-release-tests.yml
    config:
      params:
        <<: *bosh1-params
        BITS_SERVICE_ENDPOINT: 10.250.3.2
        RELEASE_NAME: bits-service-webdav

- name: upload-bits-service-release-and-manifest-to-acceptance
  plan:
  - aggregate:
    - get: s3-bits-service-manifest
      passed:
        - run-system-tests-LOCAL
      trigger: true
    - get: s3-bits-service-release
      passed: &run-system-tests-passed
        - run-system-tests-LOCAL
        - run-system-tests-S3
        - run-system-tests-WEBDAV
      trigger: true
    - get: bits-service-release-version
    - get: ci-tasks
      passed: *run-system-tests-passed
      trigger: true
  - aggregate:
    - task: upload-bits-service-release-to-acceptance
      file: ci-tasks/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: ci-tasks
          - name: s3-bits-service-release
          - name: bits-service-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: s3-bits-service-release/*.tgz
          VERSION_FILE: bits-service-release-version/number
          RELEASE_NAME: bits-service-release
    - task: upload-bits-service-manifest-to-acceptance
      file: ci-tasks/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: ci-tasks
          - name: s3-bits-service-manifest
          - name: bits-service-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: s3-bits-service-manifest/*.yml
          VERSION_FILE: bits-service-release-version/number
          RELEASE_NAME: bits-service-release

# CLOUD CONTROLLER
- name: cc-tests
  plan:
  - aggregate:
    - get: git-bits-service-ci
    - get: git-cloud-controller
      trigger: true
  - task: run-tests
    file: git-bits-service-ci/tasks/run-cc-tests.yml

# CF-RELEASE
- name: create-cf-release
  serial: true
  plan:
  - aggregate:
    - get: cf-release-version
      params:
        pre: dev
    - get: git-cf-release
      trigger: true
    - get: git-bits-service-ci
      trigger: true
  - task: create-cf-release
    file: git-bits-service-ci/tasks/create-cf-release.yml
    config:
      params:
        VERSION_FILE: ../cf-release-version/number
  - put: s3-cf-release
    params:
      file: releases/*.tgz
    on_failure:
      put: cf-release-version
      params: { file: cf-release-version/number }
  - put: cf-release-version
    params:
      file: cf-release-version/number

- name: cf-release-done
  plan:
  - aggregate:
    - get: git-cf-release
      passed: &cf-release-done-passed
        - CATs-aws-with-bits
        - CATs-diego-aws-with-bits
        - verification-migration-backwards-bosh1
        - verification-migration-backwards-bosh2
    - get: s3-cf-release
      passed: *cf-release-done-passed
      trigger: true
    - get: cf-release-version
      passed: [verification-migration-backwards-bosh1, verification-migration-backwards-bosh2, CATs-diego-aws-with-bits, CATs-aws-with-bits]
    - get: git-bits-service-ci
      passed: *cf-release-done-passed
    - get: git-bits-service-release
      passed:
        - enable-BITS-SERVICE
        - enable-BITS-SERVICE-diego
        - disable-BITS-SERVICE-bosh1
        - disable-BITS-SERVICE-bosh2
  - task: create-bosh-lite-manifest
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      params:
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/local.yml
        BOSH_TARGET: {{bosh-target}}
  - aggregate:
    - put: s3-cf-manifest
      params:
        file: manifests/*.yml
    - task: upload-cf-release-to-acceptance
      file: git-bits-service-ci/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: s3-cf-release
          - name: cf-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: s3-cf-release/*.tgz
          VERSION_FILE: cf-release-version/number
          RELEASE_NAME: cf-release
    - task: upload-manifest-to-acceptance
      file: git-bits-service-ci/tasks/scp-to-acceptance.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: manifests
          - name: cf-release-version
        params:
          ACCEPTANCE_IP: {{acceptance-ip}}
          SSH_KEY: {{acceptance-private-key}}
          FILE: manifests/*.yml
          VERSION_FILE: cf-release-version/number
          RELEASE_NAME: cf-release

- name: manually-delete-cf-dea-aws
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - get: git-bits-service-ci
    - get: cf-dea-aws-deployment-events
      params: { bump: major }
  - task: delete-deployment
    file: git-bits-service-ci/tasks/delete-deployment.yml
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf1
  - put: cf-dea-aws-deployment-events
    params: { file: cf-dea-aws-deployment-events/number }

- name: deploy-cf-dea-aws
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [create-cf-release]
    - put: cf1-aws-deployment-lock
      params: { acquire: true }
    - get: s3-cf-release
      passed: [create-cf-release]
      trigger: true
    - get: cf-release-version
      passed: [create-cf-release]
    - get: s3-bits-service-release
      passed: *run-system-tests-passed
      trigger: true
    - get: git-bits-service-release
    - get: git-bits-service-ci
    - get: cf-dea-aws-deployment-events
      passed: [manually-delete-cf-dea-aws]
      trigger: true
    - { get: stemcell, resource: aws-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
    config: &update-aws-cf-manifest-cf1-config
      params:
        IAAS: aws
        MANIFEST_STUBS: manifests/cf-aws-network-1.yml ../git-bits-service-release/templates/s3.yml
        CF_USER: {{aws-cf1-user}}
        CF_PASSWORD: {{aws-cf1-password}}
        CF_DOMAIN: {{aws-cf1-domain}}
        CF_PUBLIC_IP: {{aws-cf1-public-ip}}
        CF_DEPLOYMENT_NAME: cf1
        BITS_DIRECTORY_KEY: {{cf1-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf1-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf1-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf1-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
        BOSH_TARGET: {{aws-bosh-target}}
  - put: aws-dea-deployment
    params:
     manifest: manifests/manifest.yml
     stemcells: ["stemcell/stemcell.tgz"]
     releases:
     - s3-cf-release/cf-*.tgz
     - s3-bits-service-release/*.tgz
    on_failure:
      put: cf1-aws-deployment-lock
      params: { release: cf1-aws-deployment-lock }

- name: release-cf1-aws-release-lock
  plan:
  - get: cf1-aws-deployment-lock
    passed: [deploy-cf-dea-aws]
  - put: cf1-aws-deployment-lock
    params: { release: cf1-aws-deployment-lock }

- name: CATs-aws
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [deploy-cf-dea-aws]
    - get: s3-cf-release
      passed: [deploy-cf-dea-aws]
      trigger: true
    - get: s3-bits-service-release
      passed: [deploy-cf-dea-aws]
    - get: cf1-aws-deployment-lock
      trigger: true
      passed: [deploy-cf-dea-aws]
    - get: git-bits-service-ci
      passed: [deploy-cf-dea-aws]
    - get: cf-release-version
      passed: [deploy-cf-dea-aws]
  - task: run-cats
    attempts: 6
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *aws-bosh-params
        ERRAND_NAME: acceptance_tests
        DEPLOYMENT_NAME: cf1
    on_failure: &inform-pipeline-operator-dea-aws-cats
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-dea-aws]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-dea-aws)

- name: enable-BITS-SERVICE
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [CATs-aws]
    - get: s3-cf-release
      passed: [CATs-aws]
      trigger: true
    - get: s3-bits-service-release
      passed: [CATs-aws]
    - get: cf-release-version
      passed: [CATs-aws]
    - get: cf1-aws-deployment-lock
      trigger: true
      passed: [CATs-aws]
    - get: git-bits-service-release
      passed: [deploy-cf-dea-aws]
    - get: git-bits-service-ci
      passed: [CATs-aws]
    - { get: stemcell, resource: aws-stemcell }
  - aggregate:
    - task: update-cf-manifest
      file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
      config:
        <<: *update-aws-cf-manifest-cf1-config
        params:
          MANIFEST_STUBS: manifests/cf-aws-network-1.yml manifests/enable-bits.yml manifests/bits-network-aws.yml ../git-bits-service-release/templates/s3.yml
  - put: aws-dea-deployment
    params:
     manifest: manifests/manifest.yml
     stemcells: ["stemcell/stemcell.tgz"]
     releases:
     - s3-cf-release/cf-*.tgz
     - s3-bits-service-release/*.tgz
    on_failure:
      put: cf1-aws-deployment-lock
      params: { release: cf1-aws-deployment-lock }
  - put: s3-cf-aws-manifest
    params:
      file: manifests/*.yml

- name: CATs-aws-with-bits
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [enable-BITS-SERVICE]
    - get: s3-cf-aws-manifest
      passed: [enable-BITS-SERVICE]
    - get: s3-cf-release
      passed: [enable-BITS-SERVICE]
      trigger: true
    - get: cf-release-version
      passed: [enable-BITS-SERVICE]
    - get: cf1-aws-deployment-lock
      trigger: true
      passed: [enable-BITS-SERVICE]
    - get: git-bits-service-ci
      passed: [enable-BITS-SERVICE]
  - task: run-cats
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 6
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf1
        ERRAND_NAME: acceptance_tests
    on_failure: *inform-pipeline-operator-dea-aws-cats
  - put: cf1-aws-deployment-lock
    params: { release: cf1-aws-deployment-lock }

- name: manually-delete-cf-diego-aws
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - get: git-bits-service-ci
    - get: cf-diego-aws-deployment-events
      params: { bump: major }
  - task: delete-deployment
    file: git-bits-service-ci/tasks/delete-deployment.yml
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf2
  - put: cf-diego-aws-deployment-events
    params: { file: cf-diego-aws-deployment-events/number }

- name: deploy-cf-diego-aws
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [create-cf-release]
    - put: cf2-aws-deployment-lock
      params: { acquire: true }
    - get: cf-release-version
      passed: [create-cf-release]
      trigger: true
    - get: s3-cf-release
      passed: [create-cf-release]
    - get: s3-bits-service-release
      passed: *run-system-tests-passed
      trigger: true
    - get: cf-release-version
      passed: [create-cf-release]
    - get: git-bits-service-release
    - get: git-bits-service-ci
    - get: cf-diego-aws-deployment-events
      passed: [manually-delete-cf-diego-aws]
      trigger: true
    - { get: stemcell, resource: aws-stemcell }
    - get: diego-release-tarball
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
    config: &update-aws-cf-manifest-cf2-config
      params:
        IAAS: aws
        MANIFEST_STUBS: manifests/cf-aws-network-2.yml manifests/enable-diego-cats.yml ../git-bits-service-release/templates/s3.yml
        CF_USER: {{aws-cf2-user}}
        CF_PASSWORD: {{aws-cf2-password}}
        CF_DOMAIN: {{aws-cf2-domain}}
        CF_PUBLIC_IP: {{aws-cf2-public-ip}}
        CF_DEPLOYMENT_NAME: cf2
        BITS_DIRECTORY_KEY: {{cf2-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf2-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf2-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf2-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
        BOSH_TARGET: {{aws-bosh-target}}
  - put: aws-diego-deployment
    params:
     manifest: manifests/manifest.yml
     stemcells: ["stemcell/stemcell.tgz"]
     releases:
     - s3-cf-release/cf-*.tgz
     - s3-bits-service-release/*.tgz
     - diego-release-tarball/*.tgz
    on_failure:
      put: cf2-aws-deployment-lock
      params: { release: cf2-aws-deployment-lock }

- name: release-cf2-aws-release-lock
  plan:
  - get: cf2-aws-deployment-lock
    passed: [deploy-cf-diego-aws]
  - put: cf2-aws-deployment-lock
    params: { release: cf2-aws-deployment-lock }

- name: CATs-diego-aws
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [deploy-cf-diego-aws]
    - get: s3-cf-release
      passed: [deploy-cf-diego-aws]
    - get: s3-bits-service-release
      passed: [deploy-cf-diego-aws]
    - get: cf-release-version
      passed: [deploy-cf-diego-aws]
    - get: cf2-aws-deployment-lock
      trigger: true
      passed: [deploy-cf-diego-aws]
    - get: git-bits-service-ci
      passed: [deploy-cf-diego-aws]
  - task: run-cats
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 6
    config:
      params:
        <<: *aws-bosh-params
        ERRAND_NAME: acceptance_tests
        DEPLOYMENT_NAME: cf2
    on_failure: &inform-pipeline-operator-diego-aws-cats
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-diego-aws]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-diego-aws)

- name: enable-BITS-SERVICE-diego
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [CATs-diego-aws]
    - get: cf-release-version
      passed: [CATs-diego-aws]
    - get: s3-cf-release
      passed: [CATs-diego-aws]
    - get: s3-bits-service-release
      passed: [CATs-diego-aws]
    - get: cf-release-version
      passed: [CATs-diego-aws]
    - get: cf2-aws-deployment-lock
      trigger: true
      passed: [CATs-diego-aws]
    - get: git-bits-service-release
      passed: [deploy-cf-diego-aws]
    - get: git-bits-service-ci
      passed: [CATs-diego-aws]
    - { get: stemcell, resource: aws-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-aws-cf-manifest.yml
    config:
      <<: *update-aws-cf-manifest-cf2-config
      params:
        MANIFEST_STUBS: manifests/cf-aws-network-2.yml manifests/enable-diego-cats.yml manifests/enable-bits.yml manifests/bits-network-aws.yml ../git-bits-service-release/templates/s3.yml
  - put: aws-diego-deployment
    params:
     manifest: manifests/manifest.yml
     stemcells: ["stemcell/stemcell.tgz"]
     releases:
     - s3-cf-release/cf-*.tgz
     - s3-bits-service-release/*.tgz
    on_failure:
      put: cf2-aws-deployment-lock
      params: { release: cf2-aws-deployment-lock }

- name: CATs-diego-aws-with-bits
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [enable-BITS-SERVICE-diego]
    - get: s3-cf-release
      passed: [enable-BITS-SERVICE-diego]
    - get: cf-release-version
      passed: [enable-BITS-SERVICE-diego]
    - get: cf2-aws-deployment-lock
      trigger: true
      passed: [enable-BITS-SERVICE-diego]
    - get: git-bits-service-ci
      passed: [enable-BITS-SERVICE-diego]
  - task: run-cats
    file: git-bits-service-ci/tasks/run-errand.yml
    attempts: 6
    config:
      params:
        <<: *aws-bosh-params
        DEPLOYMENT_NAME: cf2
        ERRAND_NAME: acceptance_tests
    on_failure: *inform-pipeline-operator-diego-aws-cats
  - put: cf2-aws-deployment-lock
    params: { release: cf2-aws-deployment-lock }
    on_failure:
      task: noop
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: ubuntu}
        run:
          path: echo
          args: ["Lock was already released. Ignoring."]

# Migration

- name: manually-delete-cf-bosh1
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - get: git-bits-service-ci
    - get: cf-bosh1-deployment-events
      params: { bump: major }
  - task: delete-deployment
    file: git-bits-service-ci/tasks/delete-deployment.yml
    config:
      params:
        <<: *bosh1-params
        DEPLOYMENT_NAME: cf-warden
  - put: cf-bosh1-deployment-events
    params: { file: cf-bosh1-deployment-events/number }

- name: deploy-cf-bosh1 (S3)
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [create-cf-release]
    - put: cf-bosh1-lock
      params: { acquire: true }
    - get: cf-release-version
      passed: [create-cf-release]
      trigger: true
    - get: s3-cf-release
      passed: [create-cf-release]
    - get: s3-bits-service-release
      passed: *run-system-tests-passed
      trigger: true
    - get: git-bits-service-release
    - get: git-bits-service-ci
    - get: cf-bosh1-deployment-events
      passed: [manually-delete-cf-bosh1]
      trigger: true
    - { get: stemcell, resource: boshlite-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config: &update-boshlite1-cf-manifest-config
      params:
        IAAS: lite
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/bsmt-errands.yml
        CF_USER: admin
        CF_PASSWORD: admin
        CF_DOMAIN: bosh-lite.com
        BITS_DIRECTORY_KEY: {{cf-migration-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf-migration-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf-migration-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf-migration-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
        BOSH_TARGET: {{bosh-target}}
  - put: boshlite1-deployment
    params:
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases:
      - s3-cf-release/cf-*.tgz
      - s3-bits-service-release/*.tgz
    on_failure:
      put: cf-bosh1-lock
      params: { release: cf-bosh1-lock }


- name: release-cf-bosh1-lock
  plan:
  - get: cf-bosh1-lock
    passed: [deploy-cf-bosh1 (S3)]
  - put: cf-bosh1-lock
    params: { release: cf-bosh1-lock }

- name: prepare-migration-bosh1
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [deploy-cf-bosh1 (S3)]
    - get: s3-cf-release
      passed: [deploy-cf-bosh1 (S3)]
    - get: s3-bits-service-release
      passed: [deploy-cf-bosh1 (S3)]
    - get: cf-release-version
      passed: [deploy-cf-bosh1 (S3)]
    - get: cf-bosh1-lock
      trigger: true
      passed: [deploy-cf-bosh1 (S3)]
    - get: git-bits-service-ci
      passed: [deploy-cf-bosh1 (S3)]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh1-params
        ERRAND_NAME: bsmt_preparation
        DEPLOYMENT_NAME: cf-warden
    on_failure: &inform-pipeline-operator-bosh1-migration-tests
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-bosh1]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-bosh1)

- name: enable-BITS-SERVICE-bosh1
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [prepare-migration-bosh1]
    - get: cf-release-version
      passed: [prepare-migration-bosh1]
    - get: s3-cf-release
      passed: [prepare-migration-bosh1]
    - get: s3-bits-service-release
      passed: [prepare-migration-bosh1]
    - get: cf-bosh1-lock
      trigger: true
      passed: [prepare-migration-bosh1]
    - get: git-bits-service-release
      passed: [deploy-cf-bosh1 (S3)]
    - get: git-bits-service-ci
      passed: [prepare-migration-bosh1]
    - { get: stemcell, resource: boshlite-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite1-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-network-bosh-lite.yml
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/bsmt-errands.yml
  - put: boshlite1-deployment
    params:
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases:
      - s3-cf-release/cf-*.tgz
      - s3-bits-service-release/*.tgz
    on_failure:
      put: cf-bosh1-lock
      params: { release: cf-bosh1-lock }

- name: verification-migration-bosh1
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [enable-BITS-SERVICE-bosh1]
    - get: s3-cf-release
      passed: [enable-BITS-SERVICE-bosh1]
    - get: cf-release-version
      passed: [enable-BITS-SERVICE-bosh1]
    - get: cf-bosh1-lock
      trigger: true
      passed: [enable-BITS-SERVICE-bosh1]
    - get: git-bits-service-ci
      passed: [enable-BITS-SERVICE-bosh1]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh1-params
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: bsmt_verification
    on_failure: *inform-pipeline-operator-bosh1-migration-tests

- name: preparation-migration-backwards-bosh1
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [verification-migration-bosh1]
    - get: s3-cf-release
      passed: [verification-migration-bosh1]
    - get: cf-release-version
      passed: [verification-migration-bosh1]
    - get: cf-bosh1-lock
      trigger: true
      passed: [verification-migration-bosh1]
    - get: git-bits-service-ci
      passed: [verification-migration-bosh1]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh1-params
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: bsmt_preparation
    on_failure: *inform-pipeline-operator-bosh1-migration-tests

- name: disable-BITS-SERVICE-bosh1
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [preparation-migration-backwards-bosh1]
    - get: cf-release-version
      passed: [preparation-migration-backwards-bosh1]
    - get: s3-cf-release
      passed: [preparation-migration-backwards-bosh1]
    - get: s3-bits-service-release
    - get: cf-bosh1-lock
      trigger: true
      passed: [preparation-migration-backwards-bosh1]
    - get: git-bits-service-ci
      passed: [preparation-migration-backwards-bosh1]
    - get: git-bits-service-release
      passed: [enable-BITS-SERVICE-bosh1]
    - { get: stemcell, resource: boshlite-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite1-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/s3.yml
          manifests/bsmt-errands.yml
  - put: boshlite1-deployment
    params:
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases:
      - s3-cf-release/cf-*.tgz
      - s3-bits-service-release/*.tgz
    on_failure:
      put: cf-bosh1-lock
      params: { release: cf-bosh1-lock }

- name: verification-migration-backwards-bosh1
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [disable-BITS-SERVICE-bosh1]
    - get: s3-cf-release
      passed: [disable-BITS-SERVICE-bosh1]
    - get: cf-release-version
      passed: [disable-BITS-SERVICE-bosh1]
    - get: cf-bosh1-lock
      trigger: true
      passed: [disable-BITS-SERVICE-bosh1]
    - get: git-bits-service-ci
      passed: [disable-BITS-SERVICE-bosh1]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh1-params
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: bsmt_verification
    on_failure: &inform-pipeline-operator-bosh1-migration-tests
  - put: cf-bosh1-lock
    params: { release: cf-bosh1-lock }

- name: manually-delete-cf-bosh2
  serial: true
  plan: &delete-deployment-plan
  - aggregate:
    - get: git-bits-service-ci
    - get: cf-bosh2-deployment-events
      params: { bump: major}
  - task: delete-deployment
    file: git-bits-service-ci/tasks/delete-deployment.yml
    config:
      params:
        <<: *bosh2-params
        DEPLOYMENT_NAME: cf-warden
  - put: cf-bosh2-deployment-events
    params: { file: cf-bosh2-deployment-events/number }

# no-migration tests for webdav
- name: deploy-cf-bosh2 (webdav)
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [create-cf-release]
    - put: cf-bosh2-lock
      params: { acquire: true }
    - get: cf-release-version
      passed: [create-cf-release]
      trigger: true
    - get: s3-cf-release
      passed: [create-cf-release]
    - get: s3-bits-service-release
      passed: *run-system-tests-passed
      trigger: true
    - get: git-bits-service-release
    - get: git-bits-service-ci
    - get: cf-bosh2-deployment-events
      passed: [manually-delete-cf-bosh2]
      trigger: true
    - { get: stemcell, resource: boshlite-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config: &update-boshlite2-cf-manifest-config
      params:
        IAAS: lite
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/webdav-cf.yml
          manifests/bsmt-errands.yml
        CF_USER: admin
        CF_PASSWORD: admin
        CF_DOMAIN: bosh-lite.com
        BITS_DIRECTORY_KEY: {{cf-migration-s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{cf-migration-s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{cf-migration-s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{cf-migration-s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: webdav
        BOSH_TARGET: {{bosh2-target}}
  - put: boshlite2-deployment
    params:
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases:
      - s3-cf-release/cf-*.tgz
      - s3-bits-service-release/*.tgz
    on_failure:
      put: cf-bosh2-lock
      params: { release: cf-bosh2-lock }

- name: release-cf-bosh2-lock
  plan:
  - get: cf-bosh2-lock
    passed: [deploy-cf-bosh2 (webdav)]
  - put: cf-bosh2-lock
    params: { release: cf-bosh2-lock }

- name: prepare-migration-bosh2
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [deploy-cf-bosh2 (webdav)]
    - get: s3-cf-release
      passed: [deploy-cf-bosh2 (webdav)]
    - get: s3-bits-service-release
      passed: [deploy-cf-bosh2 (webdav)]
    - get: cf-release-version
      passed: [deploy-cf-bosh2 (webdav)]
    - get: cf-bosh2-lock
      trigger: true
      passed: [deploy-cf-bosh2 (webdav)]
    - get: git-bits-service-ci
      passed: [deploy-cf-bosh2 (webdav)]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh2-params
        ERRAND_NAME: bsmt_preparation
        DEPLOYMENT_NAME: cf-warden
    on_failure: &inform-pipeline-operator-bosh2-migration-tests
      task: inform-pipeline-operator
      file: git-bits-service-ci/tasks/echo.yml
      config:
        params:
          MESSAGE: |
              Consider doing a fresh deployment by manually running job
              [manually-delete-cf-bosh2]
              (https://flintstone.ci.cf-app.com/pipelines/bits-service/jobs/manually-delete-cf-bosh2)

- name: enable-BITS-SERVICE-bosh2
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [prepare-migration-bosh2]
    - get: cf-release-version
      passed: [prepare-migration-bosh2]
    - get: s3-cf-release
      passed: [prepare-migration-bosh2]
    - get: s3-bits-service-release
      passed: [prepare-migration-bosh2]
    - get: cf-bosh2-lock
      trigger: true
      passed: [prepare-migration-bosh2]
    - get: git-bits-service-release
      passed: [deploy-cf-bosh2 (webdav)]
    - get: git-bits-service-ci
      passed: [prepare-migration-bosh2]
    - { get: stemcell, resource: boshlite-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite2-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-network-bosh-lite.yml
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/enable-bits.yml
          ../git-bits-service-release/templates/webdav-cf.yml
          manifests/bsmt-errands.yml
  - put: boshlite2-deployment
    params:
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases:
      - s3-cf-release/cf-*.tgz
      - s3-bits-service-release/*.tgz
    on_failure:
      put: cf-bosh2-lock
      params: { release: cf-bosh2-lock }

- name: verification-migration-bosh2
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [enable-BITS-SERVICE-bosh2]
    - get: s3-cf-release
      passed: [enable-BITS-SERVICE-bosh2]
    - get: cf-release-version
      passed: [enable-BITS-SERVICE-bosh2]
    - get: cf-bosh2-lock
      trigger: true
      passed: [enable-BITS-SERVICE-bosh2]
    - get: git-bits-service-ci
      passed: [enable-BITS-SERVICE-bosh2]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh2-params
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: bsmt_verification
    on_failure: *inform-pipeline-operator-bosh2-migration-tests

- name: preparation-migration-backwards-bosh2
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [verification-migration-bosh2]
    - get: s3-cf-release
      passed: [verification-migration-bosh2]
    - get: s3-bits-service-release
    - get: cf-release-version
      passed: [verification-migration-bosh2]
    - get: cf-bosh2-lock
      trigger: true
      passed: [verification-migration-bosh2]
    - get: git-bits-service-ci
      passed: [verification-migration-bosh2]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh2-params
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: bsmt_preparation
    on_failure: *inform-pipeline-operator-bosh2-migration-tests

- name: disable-BITS-SERVICE-bosh2
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [preparation-migration-backwards-bosh2]
    - get: cf-release-version
      passed: [preparation-migration-backwards-bosh2]
    - get: s3-cf-release
      passed: [preparation-migration-backwards-bosh2]
    - get: s3-bits-service-release
      passed: [preparation-migration-backwards-bosh2]
    - get: cf-bosh2-lock
      trigger: true
      passed: [preparation-migration-backwards-bosh2]
    - get: git-bits-service-ci
      passed: [preparation-migration-backwards-bosh2]
    - get: git-bits-service-release
      passed: [enable-BITS-SERVICE-bosh2]
    - { get: stemcell, resource: boshlite-stemcell }
  - task: update-cf-manifest
    file: git-bits-service-ci/tasks/update-cf-manifest.yml
    config:
      <<: *update-boshlite2-cf-manifest-config
      params:
        MANIFEST_STUBS: >
          manifests/bits-service.yml
          ../git-bits-service-release/templates/cc-blobstore-properties.yml
          ../git-bits-service-release/templates/bits-service-signing-properties.yml
          manifests/bits-network-bosh-lite.yml
          ../git-bits-service-release/templates/webdav-cf.yml
          manifests/bsmt-errands.yml
  - put: boshlite2-deployment
    params:
      manifest: manifests/manifest.yml
      stemcells: ["stemcell/stemcell.tgz"]
      releases:
      - s3-cf-release/cf-*.tgz
      - s3-bits-service-release/*.tgz
    on_failure:
      put: cf-bosh2-lock
      params: { release: cf-bosh2-lock }

- name: verification-migration-backwards-bosh2
  serial: true
  plan:
  - aggregate:
    - get: git-cf-release
      passed: [disable-BITS-SERVICE-bosh2]
    - get: s3-cf-release
      passed: [disable-BITS-SERVICE-bosh2]
    - get: cf-release-version
      passed: [disable-BITS-SERVICE-bosh2]
    - get: cf-bosh2-lock
      trigger: true
      passed: [disable-BITS-SERVICE-bosh2]
    - get: git-bits-service-ci
      passed: [disable-BITS-SERVICE-bosh2]
  - task: run-bits-service-migration-tests
    file: git-bits-service-ci/tasks/run-errand.yml
    config:
      params:
        <<: *bosh2-params
        DEPLOYMENT_NAME: cf-warden
        ERRAND_NAME: bsmt_verification
    on_failure: *inform-pipeline-operator-bosh2-migration-tests
  - put: cf-bosh2-lock
    params: { release: cf-bosh2-lock }

# Infrastructure
- name: recreate-bosh-lite-1
  serial: true
  plan:
  - aggregate:
    - get: git-bits-service-ci
    - get: git-bits-service
    - get: s3-bits-service-release
      passed: [upload-bits-service-release-and-manifest-to-acceptance]
    - get: s3-cf-release
      passed: [create-cf-release]
  - task: recreate-bosh-lite
    file: git-bits-service-ci/tasks/recreate-bosh-lite.yml
    config:
      params:
        SSH_CONNECTION_STRING: root@10.155.248.181
        SSH_KEY: {{github-private-key}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        BOSH_DIRECTOR_IP: 192.168.50.4
        VAGRANT_GATEWAY: 192.168.50.1
        DIEGO_RELEASE_VERSION: {{diego-release-version}}
        GARDEN_LINUX_RELEASE_VERSION: {{garden-linux-release-version}}
        ETCD_RELEASE_VERSION: {{etcd-release-version}}
        CFLINUXFS2_ROOTFS_RELEASE_VERSION: {{cflinuxfs2-rootfs-release-version}}
  - aggregate:
    - task: upload-last-bits-service-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: s3-bits-service-release
        params:
          <<: *bosh1-params
          RELEASE_FILE: s3-bits-service-release/*.tgz
    - task: upload-last-cf-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: s3-cf-release
        params:
          <<: *bosh1-params
          RELEASE_FILE: s3-cf-release/*.tgz

- name: recreate-bosh-lite-acceptance
  serial: true
  plan:
  - aggregate:
    - get: git-bits-service-ci
    - get: git-bits-service
    - get: s3-bits-service-release
      passed: [upload-bits-service-release-and-manifest-to-acceptance]
    - get: s3-cf-release
      passed: [create-cf-release]
  - task: recreate-bosh-lite
    file: git-bits-service-ci/tasks/recreate-bosh-lite.yml
    config:
      params:
        SSH_CONNECTION_STRING: root@10.155.248.164
        SSH_KEY: {{github-private-key}}
        BOSH_USERNAME: {{bosh-acceptance-username}}
        BOSH_PASSWORD: {{bosh-acceptance-password}}
        BOSH_DIRECTOR_IP: 192.168.150.4
        VAGRANT_GATEWAY: 192.168.150.1
        DIEGO_RELEASE_VERSION: {{diego-release-version}}
        GARDEN_LINUX_RELEASE_VERSION: {{garden-linux-release-version}}
        ETCD_RELEASE_VERSION: {{etcd-release-version}}
        CFLINUXFS2_ROOTFS_RELEASE_VERSION: {{cflinuxfs2-rootfs-release-version}}
  - aggregate:
    - task: upload-last-bits-service-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-ci
          - name: s3-bits-service-release
        params:
          BOSH_TARGET: {{bosh-acceptance-target}}
          BOSH_USERNAME: {{bosh-acceptance-username}}
          BOSH_PASSWORD: {{bosh-acceptance-password}}
          RELEASE_FILE: s3-bits-service-release/*.tgz
    - task: upload-last-cf-release
      file: git-bits-service-ci/tasks/upload-release.yml
      config:
        inputs:
          - name: git-bits-service-release
          - name: s3-cf-release
        params:
          BOSH_TARGET: {{bosh-acceptance-target}}
          BOSH_USERNAME: {{bosh-acceptance-username}}
          BOSH_PASSWORD: {{bosh-acceptance-password}}
          RELEASE_FILE: s3-cf-release/*.tgz

- name: cleanup-bosh-1
  serial: true
  plan:
  - get: git-bits-service-ci
  - get: nightly-timer
    trigger: true
  - task: cleanup-bosh
    file: git-bits-service-ci/tasks/bosh-cleanup.yml
    config:
      params: *bosh1-params

- name: cleanup-bosh-acceptance
  serial: true
  plan:
  - get: git-bits-service-ci
  - get: nightly-timer
    trigger: true
  - task: cleanup-bosh
    file: git-bits-service-ci/tasks/bosh-cleanup.yml
    config:
      params:
        BOSH_USERNAME: {{bosh-acceptance-username}}
        BOSH_PASSWORD: {{bosh-acceptance-password}}
        BOSH_TARGET: {{bosh-acceptance-target}}
